<div id="smoke_bkg" class="fixed top-0 h-full w-full -z-10"></div>

<script>
  import * as THREE from "three";

  const $bkg = document.getElementById("smoke_bkg");

  const w = window.innerWidth;
  const h = window.innerHeight;

  //Initial Three.js
  //Camera, scena, rendericer

  //Scene
  const scene = new THREE.Scene();

  //Luz fireccional
  const light = new THREE.DirectionalLight(0xffffff, 0.5);

  light.position.set(-1, 3, 1);
  scene.add(light);

  //Camera
  //75->Angle vision 75%
  // Aspect relation w/h
  //1,1000 Profondidad cercana,lejanda en que se renderizara la información
  const camera = new THREE.PerspectiveCamera(75, w / h, 1, 1000);
  camera.position.z = 10;
  scene.add(camera);

  //Renderizador
  const renderer = new THREE.WebGLRenderer();
  renderer.setSize(w, h);
  renderer.setClearColor(0x333333, 1);

  $bkg?.appendChild(renderer.domElement);

  //   //   Crear un objeto
  //   //Geometría
  //   const geometry = new THREE.BoxGeometry(1, 1, 1);
  //   //   Material
  //   const material = new THREE.MeshBasicMaterial({
  //     color: 0x0099ff,
  //   });
  //   //   Malla
  //   //   const cube = new THREE.Mesh(geometry, material);

  //   //   scene.add(cube);

  const somkeParticles: THREE.Mesh[] = [];

  const loader = new THREE.TextureLoader();

  loader.crossOrigin = "";

  loader.load("/cafe.png", (texture) => {
    //Crear plano geométrico 300x300
    const smokeGeo = new THREE.PlaneGeometry(300, 300);

    //Material
    const smokeMaterial = new THREE.MeshLambertMaterial({
      map: texture,
      transparent: true,
    });

    const NUM_PARTICLES = 300;
    for (let p = 0; p < NUM_PARTICLES; p++) {
      //Malla y material
      const particle = new THREE.Mesh(smokeGeo, smokeMaterial);

      particle.position.set(
        Math.random() * 500 - 250, //X
        Math.random() * 500 - 250, //Y
        Math.random() * 1000 - 100 //Z
      );
      //Z
      particle.rotation.z = Math.random() * 360;
      //Particula en la escena
      scene.add(particle);
      somkeParticles.push(particle);
    }
  });

  function animate() {
    requestAnimationFrame(animate);

    somkeParticles.forEach((particle) => {
      particle.rotation.z += 0.001;
    });

    // cube.rotation.x += 0.01;
    // cube.rotation.y += 0.01;
    // cube.position.y += 0.01;
    // cube.position.x += 0.01;
    // cube.position.z += 0.05;
    renderer.render(scene, camera);
  }
  animate();
</script>
